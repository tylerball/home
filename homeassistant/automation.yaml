- alias: Receiver Volume
  trigger:
    platform: state
    entity_id: input_number.receiver_volume
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.receiver
        volume_level: '{{ states.input_number.receiver_volume.state | float }}'

- alias: Receiver Volume set
  trigger:
    platform: state
    entity_id: media_player.receiver
  action:
    - service: input_number.set_value
      data_template:
        entity_id: media_player.receiver
        volume_level: "{{ state_attr('media_player.receiver', 'volume_level') | float }}"

- alias: Bedroom Volume
  trigger:
    platform: state
    entity_id: sensor.bedroom_volume
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.bedroom_volume
        value: '{{ trigger.to_state.state }}'

- alias: Bedroom Speaker On
  trigger:
    platform: state
    entity_id: sensor.bedroom_volume
  condition:
    - condition: template
      value_template: "{{ state_attr('sensor.bedroom_volume', 'selected') }}"
  action:
    - service: switch.turn_on
      entity_id: switch.bedroom_stereo

- alias: Bedroom Speaker Off
  trigger:
    platform: state
    entity_id: sensor.bedroom_volume
  condition:
    - condition: template
      value_template: "{{ state_attr('sensor.bedroom_volume', 'selected') == False }}"
  action:
    - service: switch.turn_off
      entity_id: switch.bedroom_stereo

- alias: Office Volume
  trigger:
    platform: state
    entity_id: sensor.office_volume
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.office_volume
        value: '{{ trigger.to_state.state }}'

- alias: Living Room Speaker On
  trigger:
    platform: state
    entity_id: sensor.living_room_volume
  condition:
    - condition: template
      value_template: "{{ state_attr('sensor.living_room_volume', 'selected') }}"
  action:
    - service: media_player.turn_on
      data:
        entity_id: media_player.receiver
    - service: media_player.select_source
      data:
        entity_id: media_player.receiver
        source: Apple TV
    - service: rest_command.set_living_room_volume

- alias: Sunset
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  action:
    service: scene.turn_on
    entity_id: scene.sunset

- alias: Good Night
  trigger:
    platform: time
    at: '01:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.good_night

- alias: Music Alarm
  condition:
    condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == (states.input_datetime.alarm.attributes.timestamp | int | timestamp_custom("%H:%M", False)) }}'
  action:
    - service: script.music_alarm

- alias: Out late
  condition:
    condition: time
    after: '01:00:00'
    before: '06:00:00'
  trigger:
    platform: state
    entity_id: device_tracker.tylers_phone, device_tracker.jens_phone
    from: 'home'
    to: 'not_home'
  action:
    - service: light.turn_on
      data:
        entity_id: light.porch_light
        brightness: 10

- alias: Return late
  condition:
    condition: time
    after: '01:00:00'
    before: '06:00:00'
  trigger:
    platform: state
    entity_id: device_tracker.tylers_phone, device_tracker.jens_phone
    from: 'not_home'
    to: 'home'
  action:
    - delay: 0:30
    - service: light.turn_off
      entity_id: light.porch_light

- name: Sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: "-00:30:00"
  action:
    service: scene.turn_on
    entity_id: scene.good_night
